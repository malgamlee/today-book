{"ast":null,"code":"import _omit from \"lodash/omit\";\nimport _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { Bar, getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\n\nvar evaluateProps = function (props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, _assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, _assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n  return _assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n};\n\nexport var usePreviousValue = function (value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nvar CanvasBar = function (initialProps) {\n  var _useCanvasContext = useCanvasContext(),\n      canvasRef = _useCanvasContext.canvasRef;\n\n  var props = evaluateProps(initialProps);\n  var polar = props.polar,\n      style = props.style,\n      barWidth = props.barWidth,\n      cornerRadius = props.cornerRadius,\n      origin = props.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(props, cornerRadius) : getBarPath(props, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, props]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n\n    if (polar) {\n      ctx.translate(origin.x, origin.y);\n    }\n\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]); // This will clear the previous bar without clearing the entire canvas\n\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save(); // This ensures that the entire shape is erased\n\n      ctx.lineWidth = style.strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var ctx = canvasRef.current.getContext(\"2d\");\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, props, path2d, clearPreviousPath]);\n  return null;\n};\n\nCanvasBar.propTypes = _omit(Bar.propTypes, \"pathComponent\");\nexport default CanvasBar;","map":{"version":3,"names":["_omit","_assign","React","Bar","getBarPath","getBarWidth","getCornerRadius","getPolarBarPath","getStyle","useCanvasContext","evaluateProps","props","style","barWidth","cornerRadius","usePreviousValue","value","ref","useRef","useEffect","current","CanvasBar","initialProps","_useCanvasContext","canvasRef","polar","origin","path2d","useMemo","p","Path2D","previousPath","draw","useCallback","ctx","path","fillStyle","fill","strokeStyle","stroke","globalAlpha","fillOpacity","lineWidth","strokeWidth","translate","x","y","setTransform","clearPreviousPath","save","globalCompositeOperation","restore","getContext","propTypes"],"sources":["/Users/jijeong/study/foundation-ts/node_modules/victory-canvas/es/canvas-bar.js"],"sourcesContent":["import _omit from \"lodash/omit\";\nimport _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { Bar, getBarPath, getBarWidth, getCornerRadius, getPolarBarPath, getStyle } from \"victory-bar\";\nimport { useCanvasContext } from \"./hooks/use-canvas-context\";\n\nvar evaluateProps = function (props) {\n  /**\n   * Potential evaluated props of following must be evaluated in this order:\n   * 1) `style`\n   * 2) `barWidth`\n   * 3) `cornerRadius`\n   */\n  var style = getStyle(props.style, props);\n  var barWidth = getBarWidth(props.barWidth, _assign({}, props, {\n    style: style\n  }));\n  var cornerRadius = getCornerRadius(props.cornerRadius, _assign({}, props, {\n    style: style,\n    barWidth: barWidth\n  }));\n  return _assign({}, props, {\n    style: style,\n    barWidth: barWidth,\n    cornerRadius: cornerRadius\n  });\n};\n\nexport var usePreviousValue = function (value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nvar CanvasBar = function (initialProps) {\n  var _useCanvasContext = useCanvasContext(),\n      canvasRef = _useCanvasContext.canvasRef;\n\n  var props = evaluateProps(initialProps);\n  var polar = props.polar,\n      style = props.style,\n      barWidth = props.barWidth,\n      cornerRadius = props.cornerRadius,\n      origin = props.origin;\n  var path2d = React.useMemo(function () {\n    var p = polar ? getPolarBarPath(props, cornerRadius) : getBarPath(props, barWidth, cornerRadius);\n    return new Path2D(p);\n  }, [polar, barWidth, cornerRadius, props]);\n  var previousPath = usePreviousValue(path2d);\n  var draw = React.useCallback(function (ctx, path) {\n    ctx.fillStyle = style.fill;\n    ctx.strokeStyle = style.stroke;\n    ctx.globalAlpha = style.fillOpacity;\n    ctx.lineWidth = style.strokeWidth;\n\n    if (polar) {\n      ctx.translate(origin.x, origin.y);\n    }\n\n    ctx.fill(path);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n  }, [style, origin, polar]); // This will clear the previous bar without clearing the entire canvas\n\n  var clearPreviousPath = React.useCallback(function (ctx) {\n    if (previousPath) {\n      ctx.save(); // This ensures that the entire shape is erased\n\n      ctx.lineWidth = style.strokeWidth + 2;\n      ctx.globalCompositeOperation = \"destination-out\";\n      draw(ctx, previousPath);\n      ctx.stroke(previousPath);\n      ctx.restore();\n    }\n  }, [draw, previousPath, style]);\n  React.useEffect(function () {\n    var ctx = canvasRef.current.getContext(\"2d\");\n    clearPreviousPath(ctx);\n    draw(ctx, path2d);\n  }, [canvasRef, draw, polar, barWidth, cornerRadius, props, path2d, clearPreviousPath]);\n  return null;\n};\n\nCanvasBar.propTypes = _omit(Bar.propTypes, \"pathComponent\");\nexport default CanvasBar;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,WAA1B,EAAuCC,eAAvC,EAAwDC,eAAxD,EAAyEC,QAAzE,QAAyF,aAAzF;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;AAEA,IAAIC,aAAa,GAAG,UAAUC,KAAV,EAAiB;EACnC;AACF;AACA;AACA;AACA;AACA;EACE,IAAIC,KAAK,GAAGJ,QAAQ,CAACG,KAAK,CAACC,KAAP,EAAcD,KAAd,CAApB;EACA,IAAIE,QAAQ,GAAGR,WAAW,CAACM,KAAK,CAACE,QAAP,EAAiBZ,OAAO,CAAC,EAAD,EAAKU,KAAL,EAAY;IAC5DC,KAAK,EAAEA;EADqD,CAAZ,CAAxB,CAA1B;EAGA,IAAIE,YAAY,GAAGR,eAAe,CAACK,KAAK,CAACG,YAAP,EAAqBb,OAAO,CAAC,EAAD,EAAKU,KAAL,EAAY;IACxEC,KAAK,EAAEA,KADiE;IAExEC,QAAQ,EAAEA;EAF8D,CAAZ,CAA5B,CAAlC;EAIA,OAAOZ,OAAO,CAAC,EAAD,EAAKU,KAAL,EAAY;IACxBC,KAAK,EAAEA,KADiB;IAExBC,QAAQ,EAAEA,QAFc;IAGxBC,YAAY,EAAEA;EAHU,CAAZ,CAAd;AAKD,CApBD;;AAsBA,OAAO,IAAIC,gBAAgB,GAAG,UAAUC,KAAV,EAAiB;EAC7C,IAAIC,GAAG,GAAGf,KAAK,CAACgB,MAAN,EAAV;EACAhB,KAAK,CAACiB,SAAN,CAAgB,YAAY;IAC1BF,GAAG,CAACG,OAAJ,GAAcJ,KAAd;EACD,CAFD;EAGA,OAAOC,GAAG,CAACG,OAAX;AACD,CANM;;AAQP,IAAIC,SAAS,GAAG,UAAUC,YAAV,EAAwB;EACtC,IAAIC,iBAAiB,GAAGd,gBAAgB,EAAxC;EAAA,IACIe,SAAS,GAAGD,iBAAiB,CAACC,SADlC;;EAGA,IAAIb,KAAK,GAAGD,aAAa,CAACY,YAAD,CAAzB;EACA,IAAIG,KAAK,GAAGd,KAAK,CAACc,KAAlB;EAAA,IACIb,KAAK,GAAGD,KAAK,CAACC,KADlB;EAAA,IAEIC,QAAQ,GAAGF,KAAK,CAACE,QAFrB;EAAA,IAGIC,YAAY,GAAGH,KAAK,CAACG,YAHzB;EAAA,IAIIY,MAAM,GAAGf,KAAK,CAACe,MAJnB;EAKA,IAAIC,MAAM,GAAGzB,KAAK,CAAC0B,OAAN,CAAc,YAAY;IACrC,IAAIC,CAAC,GAAGJ,KAAK,GAAGlB,eAAe,CAACI,KAAD,EAAQG,YAAR,CAAlB,GAA0CV,UAAU,CAACO,KAAD,EAAQE,QAAR,EAAkBC,YAAlB,CAAjE;IACA,OAAO,IAAIgB,MAAJ,CAAWD,CAAX,CAAP;EACD,CAHY,EAGV,CAACJ,KAAD,EAAQZ,QAAR,EAAkBC,YAAlB,EAAgCH,KAAhC,CAHU,CAAb;EAIA,IAAIoB,YAAY,GAAGhB,gBAAgB,CAACY,MAAD,CAAnC;EACA,IAAIK,IAAI,GAAG9B,KAAK,CAAC+B,WAAN,CAAkB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;IAChDD,GAAG,CAACE,SAAJ,GAAgBxB,KAAK,CAACyB,IAAtB;IACAH,GAAG,CAACI,WAAJ,GAAkB1B,KAAK,CAAC2B,MAAxB;IACAL,GAAG,CAACM,WAAJ,GAAkB5B,KAAK,CAAC6B,WAAxB;IACAP,GAAG,CAACQ,SAAJ,GAAgB9B,KAAK,CAAC+B,WAAtB;;IAEA,IAAIlB,KAAJ,EAAW;MACTS,GAAG,CAACU,SAAJ,CAAclB,MAAM,CAACmB,CAArB,EAAwBnB,MAAM,CAACoB,CAA/B;IACD;;IAEDZ,GAAG,CAACG,IAAJ,CAASF,IAAT;IACAD,GAAG,CAACa,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;EACD,CAZU,EAYR,CAACnC,KAAD,EAAQc,MAAR,EAAgBD,KAAhB,CAZQ,CAAX,CAfsC,CA2BV;;EAE5B,IAAIuB,iBAAiB,GAAG9C,KAAK,CAAC+B,WAAN,CAAkB,UAAUC,GAAV,EAAe;IACvD,IAAIH,YAAJ,EAAkB;MAChBG,GAAG,CAACe,IAAJ,GADgB,CACJ;;MAEZf,GAAG,CAACQ,SAAJ,GAAgB9B,KAAK,CAAC+B,WAAN,GAAoB,CAApC;MACAT,GAAG,CAACgB,wBAAJ,GAA+B,iBAA/B;MACAlB,IAAI,CAACE,GAAD,EAAMH,YAAN,CAAJ;MACAG,GAAG,CAACK,MAAJ,CAAWR,YAAX;MACAG,GAAG,CAACiB,OAAJ;IACD;EACF,CAVuB,EAUrB,CAACnB,IAAD,EAAOD,YAAP,EAAqBnB,KAArB,CAVqB,CAAxB;EAWAV,KAAK,CAACiB,SAAN,CAAgB,YAAY;IAC1B,IAAIe,GAAG,GAAGV,SAAS,CAACJ,OAAV,CAAkBgC,UAAlB,CAA6B,IAA7B,CAAV;IACAJ,iBAAiB,CAACd,GAAD,CAAjB;IACAF,IAAI,CAACE,GAAD,EAAMP,MAAN,CAAJ;EACD,CAJD,EAIG,CAACH,SAAD,EAAYQ,IAAZ,EAAkBP,KAAlB,EAAyBZ,QAAzB,EAAmCC,YAAnC,EAAiDH,KAAjD,EAAwDgB,MAAxD,EAAgEqB,iBAAhE,CAJH;EAKA,OAAO,IAAP;AACD,CA9CD;;AAgDA3B,SAAS,CAACgC,SAAV,GAAsBrD,KAAK,CAACG,GAAG,CAACkD,SAAL,EAAgB,eAAhB,CAA3B;AACA,eAAehC,SAAf"},"metadata":{},"sourceType":"module"}