{"ast":null,"code":"import store from 'store';\nimport { createSlice } from '@reduxjs/toolkit';\nconst INITIAL_STATE = {\n  theme: store.get('foundation.theme') || 'light'\n};\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState: INITIAL_STATE,\n  reducers: {\n    setTheme: (state, action) => {\n      const newColorSet = action.payload;\n      store.set('foundation.theme', newColorSet);\n      document.documentElement.setAttribute('color-theme', newColorSet);\n      state.theme = newColorSet;\n    },\n    toggleTheme: state => {\n      const newColorSet = state.theme === 'light' ? 'dark' : 'light';\n      store.set('foundation.theme', newColorSet);\n      document.documentElement.setAttribute('color-theme', newColorSet);\n      state.theme = newColorSet;\n    }\n  }\n});\nexport const {\n  setTheme,\n  toggleTheme\n} = systemSlice.actions;\nexport default systemSlice.reducer; // Selector =====================\n\nexport const getTheme = state => state.system.theme;","map":{"version":3,"names":["store","createSlice","INITIAL_STATE","theme","get","systemSlice","name","initialState","reducers","setTheme","state","action","newColorSet","payload","set","document","documentElement","setAttribute","toggleTheme","actions","reducer","getTheme","system"],"sources":["/Users/jijeong/study/bookStore-app/src/states/system.ts"],"sourcesContent":["import store from 'store'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport type { RootState } from '.'\n\nexport interface SystemState {\n  theme: string\n}\n\nconst INITIAL_STATE: SystemState = {\n  theme: store.get('foundation.theme') || 'light',\n}\n\nconst systemSlice = createSlice({\n  name: 'system',\n  initialState: INITIAL_STATE,\n  reducers: {\n    setTheme: (state: SystemState, action: PayloadAction<string>) => {\n      const newColorSet = action.payload\n      store.set('foundation.theme', newColorSet)\n      document.documentElement.setAttribute('color-theme', newColorSet)\n      state.theme = newColorSet\n    },\n    toggleTheme: (state: SystemState) => {\n      const newColorSet = state.theme === 'light' ? 'dark' : 'light'\n      store.set('foundation.theme', newColorSet)\n      document.documentElement.setAttribute('color-theme', newColorSet)\n      state.theme = newColorSet\n    },\n  },\n})\n\nexport const { setTheme, toggleTheme } = systemSlice.actions\n\nexport default systemSlice.reducer\n\n// Selector =====================\n\nexport const getTheme = (state: RootState): string => state.system.theme\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA2C,kBAA3C;AAQA,MAAMC,aAA0B,GAAG;EACjCC,KAAK,EAAEH,KAAK,CAACI,GAAN,CAAU,kBAAV,KAAiC;AADP,CAAnC;AAIA,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EAC9BK,IAAI,EAAE,QADwB;EAE9BC,YAAY,EAAEL,aAFgB;EAG9BM,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAD,EAAqBC,MAArB,KAAuD;MAC/D,MAAMC,WAAW,GAAGD,MAAM,CAACE,OAA3B;MACAb,KAAK,CAACc,GAAN,CAAU,kBAAV,EAA8BF,WAA9B;MACAG,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,aAAtC,EAAqDL,WAArD;MACAF,KAAK,CAACP,KAAN,GAAcS,WAAd;IACD,CANO;IAORM,WAAW,EAAGR,KAAD,IAAwB;MACnC,MAAME,WAAW,GAAGF,KAAK,CAACP,KAAN,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC,OAAvD;MACAH,KAAK,CAACc,GAAN,CAAU,kBAAV,EAA8BF,WAA9B;MACAG,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,aAAtC,EAAqDL,WAArD;MACAF,KAAK,CAACP,KAAN,GAAcS,WAAd;IACD;EAZO;AAHoB,CAAD,CAA/B;AAmBA,OAAO,MAAM;EAAEH,QAAF;EAAYS;AAAZ,IAA4Bb,WAAW,CAACc,OAA9C;AAEP,eAAed,WAAW,CAACe,OAA3B,C,CAEA;;AAEA,OAAO,MAAMC,QAAQ,GAAIX,KAAD,IAA8BA,KAAK,CAACY,MAAN,CAAanB,KAA5D"},"metadata":{},"sourceType":"module"}