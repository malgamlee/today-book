{"ast":null,"code":"var _jsxFileName = \"/Users/jijeong/study/bookStore-app/src/components/BookList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport NoDataPage from 'components/NoDataPage';\nimport { uniqBy } from 'lodash';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getSearchListApi } from 'services/bookSearchApi';\nimport styles from './bookList.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = _ref => {\n  _s();\n\n  let {\n    search,\n    title,\n    next\n  } = _ref;\n  const [pageNum, setPageNum] = useState(1);\n  const [itemList, setItemList] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [moreData, setMoreData] = useState(false);\n  let dataExist;\n  const target = useRef(null);\n  useEffect(() => {\n    getSearchListApi(search, pageNum).then(res => {\n      if (res.data.meta.total_count === 0) {\n        dataExist = false;\n        return;\n      }\n\n      setItemList(prev => uniqBy([...prev, ...res.data.documents], 'isbn'));\n      setMoreData(res.data.meta.is_end);\n    });\n  }, [pageNum, search]);\n  useEffect(() => console.log(itemList), [itemList]);\n  useEffect(() => {\n    let observer;\n\n    const getMoreItem = async () => {\n      setIsLoaded(true);\n      await new Promise(resolve => {\n        setTimeout(resolve, 2500);\n      });\n      setPageNum(prev => prev + 1);\n      setIsLoaded(false);\n    };\n\n    const handleObserve = async _ref2 => {\n      let [entry] = _ref2;\n      if (!next) return;\n      if (pageNum === 0) return;\n      if (moreData) return;\n\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        await getMoreItem();\n        observer.observe(entry.target);\n      }\n    };\n\n    if (target !== null && target !== void 0 && target.current) {\n      observer = new IntersectionObserver(handleObserve, {\n        threshold: 0.7\n      });\n      observer.observe(target.current);\n    }\n\n    return () => observer && observer.disconnect();\n  }, [moreData, next, target]); // const loading = isLoading ? (\n  //   <Loading />\n  // ) : (\n  //   <NoDataPage type='announcement' noDataInfo={`검색하신 '${search}'에 대한 정보가 없습니다.`} />\n  // )\n\n  const bookItems = itemList.length > 0 && itemList.filter(item => item.title !== title).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: styles.item,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `../bookdetail/${item.publisher} ${item.title}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.bookImg,\n        src: item.thumbnail,\n        alt: `${item.title} book cover`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.bookTitle,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this)\n  }, item.isbn, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !dataExist ? /*#__PURE__*/_jsxDEV(NoDataPage, {\n      type: \"announcement\",\n      noDataInfo: `검색하신 '${search}'에 대한 정보가 없습니다.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.bookList,\n        children: bookItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: target,\n        className: styles.test,\n        children: isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uB85C\\uB529\\uC911 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"l1ThdVTvz9URsj4ZM5g/2gUnD7I=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["NoDataPage","uniqBy","useEffect","useRef","useState","Link","getSearchListApi","styles","BookList","search","title","next","pageNum","setPageNum","itemList","setItemList","isLoaded","setIsLoaded","moreData","setMoreData","dataExist","target","then","res","data","meta","total_count","prev","documents","is_end","console","log","observer","getMoreItem","Promise","resolve","setTimeout","handleObserve","entry","isIntersecting","unobserve","observe","current","IntersectionObserver","threshold","disconnect","bookItems","length","filter","item","map","publisher","bookImg","thumbnail","bookTitle","isbn","bookList","test"],"sources":["/Users/jijeong/study/bookStore-app/src/components/BookList/index.tsx"],"sourcesContent":["import NoDataPage from 'components/NoDataPage'\nimport { uniqBy } from 'lodash'\nimport { useEffect, useRef, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getSearchListApi } from 'services/bookSearchApi'\nimport styles from './bookList.module.scss'\n\ninterface Props {\n  search: string\n  title: string\n  next: boolean\n}\n\ninterface Items {\n  authors: string[]\n  contents: string\n  datetime: Date\n  isbn: string\n  price: number\n  publisher: string\n  sale_price: number\n  status: string\n  thumbnail: string\n  title: string\n  translators: any[]\n  url: string\n}\n\nconst BookList = ({ search, title, next }: Props) => {\n  const [pageNum, setPageNum] = useState(1)\n  const [itemList, setItemList] = useState<Array<Items>>([])\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [moreData, setMoreData] = useState(false)\n  let dataExist: boolean\n\n  const target = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    getSearchListApi(search, pageNum).then((res) => {\n      if (res.data.meta.total_count === 0) {\n        dataExist = false\n        return\n      }\n      setItemList((prev) => uniqBy([...prev, ...res.data.documents], 'isbn'))\n      setMoreData(res.data.meta.is_end)\n    })\n  }, [pageNum, search])\n\n  useEffect(() => console.log(itemList), [itemList])\n\n  useEffect(() => {\n    let observer: IntersectionObserver\n    const getMoreItem = async () => {\n      setIsLoaded(true)\n      await new Promise((resolve) => {\n        setTimeout(resolve, 2500)\n      })\n      setPageNum((prev) => prev + 1)\n      setIsLoaded(false)\n    }\n    const handleObserve = async ([entry]: IntersectionObserverEntry[]) => {\n      if (!next) return\n      if (pageNum === 0) return\n      if (moreData) return\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target)\n        await getMoreItem()\n        observer.observe(entry.target)\n      }\n    }\n    if (target?.current) {\n      observer = new IntersectionObserver(handleObserve, {\n        threshold: 0.7,\n      })\n      observer.observe(target.current)\n    }\n    return () => observer && observer.disconnect()\n  }, [moreData, next, target])\n\n  // const loading = isLoading ? (\n  //   <Loading />\n  // ) : (\n  //   <NoDataPage type='announcement' noDataInfo={`검색하신 '${search}'에 대한 정보가 없습니다.`} />\n  // )\n\n  const bookItems =\n    itemList.length > 0 &&\n    itemList\n      .filter((item: Items) => item.title !== title)\n      .map((item: Items) => (\n        <li key={item.isbn} className={styles.item}>\n          <Link to={`../bookdetail/${item.publisher} ${item.title}`}>\n            <img className={styles.bookImg} src={item.thumbnail} alt={`${item.title} book cover`} />\n            <div className={styles.bookTitle}>{item.title}</div>\n          </Link>\n        </li>\n      ))\n\n  return (\n    <div>\n      {!dataExist ? (\n        <NoDataPage type='announcement' noDataInfo={`검색하신 '${search}'에 대한 정보가 없습니다.`} />\n      ) : (\n        <div>\n          <ul className={styles.bookList}>{bookItems}</ul>\n          <div ref={target} className={styles.test}>\n            {isLoaded && <div>로딩중 </div>}\n          </div>\n        </div>\n      )}\n      {/* <ul className={styles.bookList}>{bookItems}</ul>\n      <div ref={target} className={styles.test}>\n        {isLoaded && <div>로딩중 </div>}\n      </div> */}\n    </div>\n  )\n}\n\nexport default BookList\n"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAuBA,MAAMC,QAAQ,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAAEC,MAAF;IAAUC,KAAV;IAAiBC;EAAjB,CAAmC;EACnD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAe,EAAf,CAAxC;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;EACA,IAAIgB,SAAJ;EAEA,MAAMC,MAAM,GAAGlB,MAAM,CAAiB,IAAjB,CAArB;EAEAD,SAAS,CAAC,MAAM;IACdI,gBAAgB,CAACG,MAAD,EAASG,OAAT,CAAhB,CAAkCU,IAAlC,CAAwCC,GAAD,IAAS;MAC9C,IAAIA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcC,WAAd,KAA8B,CAAlC,EAAqC;QACnCN,SAAS,GAAG,KAAZ;QACA;MACD;;MACDL,WAAW,CAAEY,IAAD,IAAU1B,MAAM,CAAC,CAAC,GAAG0B,IAAJ,EAAU,GAAGJ,GAAG,CAACC,IAAJ,CAASI,SAAtB,CAAD,EAAmC,MAAnC,CAAjB,CAAX;MACAT,WAAW,CAACI,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcI,MAAf,CAAX;IACD,CAPD;EAQD,CATQ,EASN,CAACjB,OAAD,EAAUH,MAAV,CATM,CAAT;EAWAP,SAAS,CAAC,MAAM4B,OAAO,CAACC,GAAR,CAAYjB,QAAZ,CAAP,EAA8B,CAACA,QAAD,CAA9B,CAAT;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAI8B,QAAJ;;IACA,MAAMC,WAAW,GAAG,YAAY;MAC9BhB,WAAW,CAAC,IAAD,CAAX;MACA,MAAM,IAAIiB,OAAJ,CAAaC,OAAD,IAAa;QAC7BC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAV;MACD,CAFK,CAAN;MAGAtB,UAAU,CAAEc,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;MACAV,WAAW,CAAC,KAAD,CAAX;IACD,CAPD;;IAQA,MAAMoB,aAAa,GAAG,eAAgD;MAAA,IAAzC,CAACC,KAAD,CAAyC;MACpE,IAAI,CAAC3B,IAAL,EAAW;MACX,IAAIC,OAAO,KAAK,CAAhB,EAAmB;MACnB,IAAIM,QAAJ,EAAc;;MACd,IAAIoB,KAAK,CAACC,cAAV,EAA0B;QACxBP,QAAQ,CAACQ,SAAT,CAAmBF,KAAK,CAACjB,MAAzB;QACA,MAAMY,WAAW,EAAjB;QACAD,QAAQ,CAACS,OAAT,CAAiBH,KAAK,CAACjB,MAAvB;MACD;IACF,CATD;;IAUA,IAAIA,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEqB,OAAZ,EAAqB;MACnBV,QAAQ,GAAG,IAAIW,oBAAJ,CAAyBN,aAAzB,EAAwC;QACjDO,SAAS,EAAE;MADsC,CAAxC,CAAX;MAGAZ,QAAQ,CAACS,OAAT,CAAiBpB,MAAM,CAACqB,OAAxB;IACD;;IACD,OAAO,MAAMV,QAAQ,IAAIA,QAAQ,CAACa,UAAT,EAAzB;EACD,CA3BQ,EA2BN,CAAC3B,QAAD,EAAWP,IAAX,EAAiBU,MAAjB,CA3BM,CAAT,CAtBmD,CAmDnD;EACA;EACA;EACA;EACA;;EAEA,MAAMyB,SAAS,GACbhC,QAAQ,CAACiC,MAAT,GAAkB,CAAlB,IACAjC,QAAQ,CACLkC,MADH,CACWC,IAAD,IAAiBA,IAAI,CAACvC,KAAL,KAAeA,KAD1C,EAEGwC,GAFH,CAEQD,IAAD,iBACH;IAAoB,SAAS,EAAE1C,MAAM,CAAC0C,IAAtC;IAAA,uBACE,QAAC,IAAD;MAAM,EAAE,EAAG,iBAAgBA,IAAI,CAACE,SAAU,IAAGF,IAAI,CAACvC,KAAM,EAAxD;MAAA,wBACE;QAAK,SAAS,EAAEH,MAAM,CAAC6C,OAAvB;QAAgC,GAAG,EAAEH,IAAI,CAACI,SAA1C;QAAqD,GAAG,EAAG,GAAEJ,IAAI,CAACvC,KAAM;MAAxE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAEH,MAAM,CAAC+C,SAAvB;QAAA,UAAmCL,IAAI,CAACvC;MAAxC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,GAASuC,IAAI,CAACM,IAAd;IAAA;IAAA;IAAA;EAAA,QAHJ,CAFF;EAaA,oBACE;IAAA,UACG,CAACnC,SAAD,gBACC,QAAC,UAAD;MAAY,IAAI,EAAC,cAAjB;MAAgC,UAAU,EAAG,SAAQX,MAAO;IAA5D;MAAA;MAAA;MAAA;IAAA,QADD,gBAGC;MAAA,wBACE;QAAI,SAAS,EAAEF,MAAM,CAACiD,QAAtB;QAAA,UAAiCV;MAAjC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,GAAG,EAAEzB,MAAV;QAAkB,SAAS,EAAEd,MAAM,CAACkD,IAApC;QAAA,UACGzC,QAAQ,iBAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADf;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAxFD;;GAAMR,Q;;KAAAA,Q;AA0FN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}