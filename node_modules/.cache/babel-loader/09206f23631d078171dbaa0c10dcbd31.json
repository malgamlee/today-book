{"ast":null,"code":"var _jsxFileName = \"/Users/jijeong/study/foundation-ts/src/routes/Test/index.tsx\";\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [[{\n  x: 1,\n  y: 1\n}, {\n  x: 2,\n  y: 2\n}, {\n  x: 3,\n  y: 3\n}, {\n  x: 4,\n  y: 4\n}], [{\n  x: 1,\n  y: 400\n}, {\n  x: 2,\n  y: 350\n}, {\n  x: 3,\n  y: 300\n}, {\n  x: 4,\n  y: 250\n}], [{\n  x: 1,\n  y: 75\n}, {\n  x: 2,\n  y: 85\n}, {\n  x: 3,\n  y: 95\n}, {\n  x: 4,\n  y: 100\n}]]; // find maxima for normalizing data\n\nconst maxima = data.map(dataset => Math.max(...dataset.map(d => d.y)));\n\nconst Test = () => {\n  return /*#__PURE__*/_jsxDEV(VictoryChart, {\n    theme: VictoryTheme.material,\n    children: /*#__PURE__*/_jsxDEV(VictoryLine, {\n      style: {\n        data: {\n          stroke: '#c43a31'\n        },\n        parent: {\n          border: '1px solid #ccc'\n        }\n      },\n      data: [{\n        x: 1,\n        y: 2\n      }, {\n        x: 2,\n        y: 3\n      }, {\n        x: 3,\n        y: 5\n      }, {\n        x: 4,\n        y: 4\n      }, {\n        x: 5,\n        y: 7\n      }],\n      categories: {\n        x: ['하나', '둘', '셋', '넷', '다섯'],\n        y: ['하나', '둘', '셋', '넷', '다섯']\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["VictoryChart","VictoryLine","VictoryTheme","data","x","y","maxima","map","dataset","Math","max","d","Test","material","stroke","parent","border"],"sources":["/Users/jijeong/study/foundation-ts/src/routes/Test/index.tsx"],"sourcesContent":["import { useQuery } from 'react-query'\n\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory'\n\nconst data = [\n  [\n    { x: 1, y: 1 },\n    { x: 2, y: 2 },\n    { x: 3, y: 3 },\n    { x: 4, y: 4 },\n  ],\n  [\n    { x: 1, y: 400 },\n    { x: 2, y: 350 },\n    { x: 3, y: 300 },\n    { x: 4, y: 250 },\n  ],\n  [\n    { x: 1, y: 75 },\n    { x: 2, y: 85 },\n    { x: 3, y: 95 },\n    { x: 4, y: 100 },\n  ],\n]\n// find maxima for normalizing data\nconst maxima = data.map((dataset) => Math.max(...dataset.map((d) => d.y)))\n\nconst Test = () => {\n  return (\n    <VictoryChart theme={VictoryTheme.material}>\n      <VictoryLine\n        style={{\n          data: { stroke: '#c43a31' },\n          parent: { border: '1px solid #ccc' },\n        }}\n        data={[\n          { x: 1, y: 2 },\n          { x: 2, y: 3 },\n          { x: 3, y: 5 },\n          { x: 4, y: 4 },\n          { x: 5, y: 7 },\n        ]}\n        categories={{ x: ['하나', '둘', '셋', '넷', '다섯'], y: ['하나', '둘', '셋', '넷', '다섯'] }}\n      />\n    </VictoryChart>\n  )\n}\n\nexport default Test\n"],"mappings":";AAEA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,QAAwD,SAAxD;;AAEA,MAAMC,IAAI,GAAG,CACX,CACE;EAAEC,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CADF,EAEE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAFF,EAGE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAHF,EAIE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAJF,CADW,EAOX,CACE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CADF,EAEE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAFF,EAGE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAHF,EAIE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAJF,CAPW,EAaX,CACE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CADF,EAEE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAFF,EAGE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAHF,EAIE;EAAED,CAAC,EAAE,CAAL;EAAQC,CAAC,EAAE;AAAX,CAJF,CAbW,CAAb,C,CAoBA;;AACA,MAAMC,MAAM,GAAGH,IAAI,CAACI,GAAL,CAAUC,OAAD,IAAaC,IAAI,CAACC,GAAL,CAAS,GAAGF,OAAO,CAACD,GAAR,CAAaI,CAAD,IAAOA,CAAC,CAACN,CAArB,CAAZ,CAAtB,CAAf;;AAEA,MAAMO,IAAI,GAAG,MAAM;EACjB,oBACE,QAAC,YAAD;IAAc,KAAK,EAAEV,YAAY,CAACW,QAAlC;IAAA,uBACE,QAAC,WAAD;MACE,KAAK,EAAE;QACLV,IAAI,EAAE;UAAEW,MAAM,EAAE;QAAV,CADD;QAELC,MAAM,EAAE;UAAEC,MAAM,EAAE;QAAV;MAFH,CADT;MAKE,IAAI,EAAE,CACJ;QAAEZ,CAAC,EAAE,CAAL;QAAQC,CAAC,EAAE;MAAX,CADI,EAEJ;QAAED,CAAC,EAAE,CAAL;QAAQC,CAAC,EAAE;MAAX,CAFI,EAGJ;QAAED,CAAC,EAAE,CAAL;QAAQC,CAAC,EAAE;MAAX,CAHI,EAIJ;QAAED,CAAC,EAAE,CAAL;QAAQC,CAAC,EAAE;MAAX,CAJI,EAKJ;QAAED,CAAC,EAAE,CAAL;QAAQC,CAAC,EAAE;MAAX,CALI,CALR;MAYE,UAAU,EAAE;QAAED,CAAC,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,CAAL;QAAkCC,CAAC,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB;MAArC;IAZd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAnBD;;KAAMO,I;AAqBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}