{"ast":null,"code":"var _jsxFileName = \"/Users/jijeong/study/bookStore-app/src/components/BookList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport { getSearchListApi } from 'services/bookSearchApi';\nimport styles from './bookList.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = _ref => {\n  _s();\n\n  let {\n    author\n  } = _ref;\n  const {\n    data\n  } = useQuery(['getSearchListApi', author], () => getSearchListApi(author).then(res => res.data), {\n    enabled: !!author\n  });\n  const bookItems = data.documents.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item.authors\n  }, item.isbn, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 57\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.bookList,\n    children: bookItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BookList, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["useQuery","getSearchListApi","styles","BookList","author","data","then","res","enabled","bookItems","documents","map","item","authors","isbn","bookList"],"sources":["/Users/jijeong/study/bookStore-app/src/components/BookList/index.tsx"],"sourcesContent":["import { useQuery } from 'react-query'\nimport { getSearchListApi } from 'services/bookSearchApi'\nimport styles from './bookList.module.scss'\n\ninterface Props {\n  author: string\n}\n\ninterface Items {\n  authors: string[]\n  contents: string\n  datetime: Date\n  isbn: string\n  price: number\n  publisher: string\n  sale_price: number\n  status: string\n  thumbnail: string\n  title: string\n  translators: any[]\n  url: string\n}\n\nconst BookList = ({ author }: Props) => {\n  const { data } = useQuery(['getSearchListApi', author], () => getSearchListApi(author).then((res) => res.data), {\n    enabled: !!author,\n  })\n\n  const bookItems = data.documents.map((item: Items) => <li key={item.isbn}>{item.authors}</li>)\n\n  return <ul className={styles.bookList}>{bookItems}</ul>\n}\n\nexport default BookList\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAqBA,MAAMC,QAAQ,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACtC,MAAM;IAAEC;EAAF,IAAWL,QAAQ,CAAC,CAAC,kBAAD,EAAqBI,MAArB,CAAD,EAA+B,MAAMH,gBAAgB,CAACG,MAAD,CAAhB,CAAyBE,IAAzB,CAA+BC,GAAD,IAASA,GAAG,CAACF,IAA3C,CAArC,EAAuF;IAC9GG,OAAO,EAAE,CAAC,CAACJ;EADmG,CAAvF,CAAzB;EAIA,MAAMK,SAAS,GAAGJ,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAoBC,IAAD,iBAAiB;IAAA,UAAqBA,IAAI,CAACC;EAA1B,GAASD,IAAI,CAACE,IAAd;IAAA;IAAA;IAAA;EAAA,QAApC,CAAlB;EAEA,oBAAO;IAAI,SAAS,EAAEZ,MAAM,CAACa,QAAtB;IAAA,UAAiCN;EAAjC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CARD;;GAAMN,Q;UACaH,Q;;;KADbG,Q;AAUN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}