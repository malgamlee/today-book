{"ast":null,"code":"import { escapeRegExp } from 'lodash';\n\nconst ch2pattern = ch => {\n  if (/[ㄱ-ㅎ]/.test(ch)) {\n    const con2syl = {\n      ㄱ: '가'.charCodeAt(0),\n      ㄲ: '까'.charCodeAt(0),\n      ㄴ: '나'.charCodeAt(0),\n      ㄷ: '다'.charCodeAt(0),\n      ㄸ: '따'.charCodeAt(0),\n      ㄹ: '라'.charCodeAt(0),\n      ㅁ: '마'.charCodeAt(0),\n      ㅂ: '바'.charCodeAt(0),\n      ㅃ: '빠'.charCodeAt(0),\n      ㅅ: '사'.charCodeAt(0)\n    };\n    const begin = con2syl[ch] || (ch.charCodeAt(0) - 12613) * 588 + con2syl['ㅅ'];\n    const end = begin + 587;\n    return `[${ch}\\\\u${begin.toString(16)}-\\\\u${end.toString(16)}]`;\n  }\n\n  return escapeRegExp(ch);\n};\n\nconst FuzzyString = inputValue => {\n  const pattern = inputValue.split('').map(ch2pattern).join('.*?');\n  return new RegExp(pattern, 'i');\n};\n\n_c = FuzzyString;\nexport const fuzzyFilter = (dataList, searchValue) => {\n  const regex = FuzzyString(searchValue);\n  const resultData = dataList.filter(row => {\n    return regex.test(row.title);\n  });\n  return resultData;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FuzzyString\");","map":{"version":3,"names":["escapeRegExp","ch2pattern","ch","test","con2syl","ㄱ","charCodeAt","ㄲ","ㄴ","ㄷ","ㄸ","ㄹ","ㅁ","ㅂ","ㅃ","ㅅ","begin","end","toString","FuzzyString","inputValue","pattern","split","map","join","RegExp","fuzzyFilter","dataList","searchValue","regex","resultData","filter","row","title"],"sources":["/Users/jijeong/study/bookStore-app/src/utils/fuzzystring.ts"],"sourcesContent":["import { escapeRegExp } from 'lodash'\n\ninterface ObjType {\n  [ch: string]: number\n}\n\ninterface SearchStructure {\n  authors: string[]\n  contents: string\n  datetime: string\n  isbn: string\n  price: number\n  publisher: string\n  sale_price: number\n  status: string\n  thumbnail: string\n  title: string\n  translators: any[]\n  url: string\n}\nconst ch2pattern = (ch: string) => {\n  if (/[ㄱ-ㅎ]/.test(ch)) {\n    const con2syl: ObjType = {\n      ㄱ: '가'.charCodeAt(0),\n      ㄲ: '까'.charCodeAt(0),\n      ㄴ: '나'.charCodeAt(0),\n      ㄷ: '다'.charCodeAt(0),\n      ㄸ: '따'.charCodeAt(0),\n      ㄹ: '라'.charCodeAt(0),\n      ㅁ: '마'.charCodeAt(0),\n      ㅂ: '바'.charCodeAt(0),\n      ㅃ: '빠'.charCodeAt(0),\n      ㅅ: '사'.charCodeAt(0),\n    }\n    const begin = con2syl[ch] || (ch.charCodeAt(0) - 12613) * 588 + con2syl['ㅅ']\n    const end = begin + 587\n    return `[${ch}\\\\u${begin.toString(16)}-\\\\u${end.toString(16)}]`\n  }\n  return escapeRegExp(ch)\n}\n\nconst FuzzyString = (inputValue: string) => {\n  const pattern = inputValue.split('').map(ch2pattern).join('.*?')\n  return new RegExp(pattern, 'i')\n}\n\nexport const fuzzyFilter = (dataList: SearchStructure[], searchValue: string): SearchStructure[] => {\n  const regex = FuzzyString(searchValue)\n  const resultData = dataList.filter((row) => {\n    return regex.test(row.title)\n  })\n  return resultData\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;;AAoBA,MAAMC,UAAU,GAAIC,EAAD,IAAgB;EACjC,IAAI,QAAQC,IAAR,CAAaD,EAAb,CAAJ,EAAsB;IACpB,MAAME,OAAgB,GAAG;MACvBC,CAAC,EAAE,IAAIC,UAAJ,CAAe,CAAf,CADoB;MAEvBC,CAAC,EAAE,IAAID,UAAJ,CAAe,CAAf,CAFoB;MAGvBE,CAAC,EAAE,IAAIF,UAAJ,CAAe,CAAf,CAHoB;MAIvBG,CAAC,EAAE,IAAIH,UAAJ,CAAe,CAAf,CAJoB;MAKvBI,CAAC,EAAE,IAAIJ,UAAJ,CAAe,CAAf,CALoB;MAMvBK,CAAC,EAAE,IAAIL,UAAJ,CAAe,CAAf,CANoB;MAOvBM,CAAC,EAAE,IAAIN,UAAJ,CAAe,CAAf,CAPoB;MAQvBO,CAAC,EAAE,IAAIP,UAAJ,CAAe,CAAf,CARoB;MASvBQ,CAAC,EAAE,IAAIR,UAAJ,CAAe,CAAf,CAToB;MAUvBS,CAAC,EAAE,IAAIT,UAAJ,CAAe,CAAf;IAVoB,CAAzB;IAYA,MAAMU,KAAK,GAAGZ,OAAO,CAACF,EAAD,CAAP,IAAe,CAACA,EAAE,CAACI,UAAH,CAAc,CAAd,IAAmB,KAApB,IAA6B,GAA7B,GAAmCF,OAAO,CAAC,GAAD,CAAvE;IACA,MAAMa,GAAG,GAAGD,KAAK,GAAG,GAApB;IACA,OAAQ,IAAGd,EAAG,MAAKc,KAAK,CAACE,QAAN,CAAe,EAAf,CAAmB,OAAMD,GAAG,CAACC,QAAJ,CAAa,EAAb,CAAiB,GAA7D;EACD;;EACD,OAAOlB,YAAY,CAACE,EAAD,CAAnB;AACD,CAnBD;;AAqBA,MAAMiB,WAAW,GAAIC,UAAD,IAAwB;EAC1C,MAAMC,OAAO,GAAGD,UAAU,CAACE,KAAX,CAAiB,EAAjB,EAAqBC,GAArB,CAAyBtB,UAAzB,EAAqCuB,IAArC,CAA0C,KAA1C,CAAhB;EACA,OAAO,IAAIC,MAAJ,CAAWJ,OAAX,EAAoB,GAApB,CAAP;AACD,CAHD;;KAAMF,W;AAKN,OAAO,MAAMO,WAAW,GAAG,CAACC,QAAD,EAA8BC,WAA9B,KAAyE;EAClG,MAAMC,KAAK,GAAGV,WAAW,CAACS,WAAD,CAAzB;EACA,MAAME,UAAU,GAAGH,QAAQ,CAACI,MAAT,CAAiBC,GAAD,IAAS;IAC1C,OAAOH,KAAK,CAAC1B,IAAN,CAAW6B,GAAG,CAACC,KAAf,CAAP;EACD,CAFkB,CAAnB;EAGA,OAAOH,UAAP;AACD,CANM"},"metadata":{},"sourceType":"module"}