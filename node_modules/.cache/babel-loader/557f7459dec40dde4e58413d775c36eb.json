{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport useThrottleCallback from './useThrottleCallback';\nexport function useSendApi(apiFn, errorHandler) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const callFn = useThrottleCallback(async function () {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      await apiFn(args);\n    } catch (err) {\n      setError(err);\n      errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(err);\n    } finally {\n      setIsLoading(false);\n    }\n  });\n  const resetError = useCallback(() => setError(undefined), []);\n  return [isLoading, callFn, error, resetError];\n} // const [isLoading, postSomethingApi, error] = useSendApi(\n//   async () => {\n//     const res = await postSomethingApi({\n//       address: destAddress,\n//     })\n//     if (res.data?.id) setSomethingId(res.data.id)\n//     gaEvent({\n//       action: 'something_submit',\n//       data: gaEventParams,\n//     })\n//   },\n//   (err) => {\n//     if (!err || !isAxiosError(err) || !err.response) return\n//     const { error: message, errorDetails } = err.response.data\n//     if (message !== 'api.something.blocked' || !errorDetails) {\n//       addErrorAlert(message)\n//       return\n//     }\n//   }\n// )\n\n_s(useSendApi, \"A7e8yvcYLRg/sHSlVjb9gBIap/8=\", false, function () {\n  return [useThrottleCallback];\n});","map":{"version":3,"names":["useCallback","useState","useThrottleCallback","useSendApi","apiFn","errorHandler","isLoading","setIsLoading","error","setError","callFn","undefined","args","err","resetError"],"sources":["/Users/jijeong/study/bookStore-app/src/hooks/useSendApi.ts"],"sourcesContent":["import { useCallback, useState } from 'react'\nimport { AxiosError } from 'axios'\n\nimport useThrottleCallback from './useThrottleCallback'\n\nexport function useSendApi(\n  apiFn: (...args: any[]) => void,\n  errorHandler?: (err: AxiosError<unknown> | unknown) => void\n) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<AxiosError<unknown> | unknown>()\n\n  const callFn = useThrottleCallback(async (...args: any[]) => {\n    if (isLoading) return\n    setIsLoading(true)\n    setError(undefined)\n    try {\n      await apiFn(args)\n    } catch (err) {\n      setError(err)\n      errorHandler?.(err)\n    } finally {\n      setIsLoading(false)\n    }\n  })\n\n  const resetError = useCallback(() => setError(undefined), [])\n\n  return [isLoading, callFn, error, resetError] as const\n}\n\n// const [isLoading, postSomethingApi, error] = useSendApi(\n//   async () => {\n//     const res = await postSomethingApi({\n//       address: destAddress,\n//     })\n//     if (res.data?.id) setSomethingId(res.data.id)\n//     gaEvent({\n//       action: 'something_submit',\n//       data: gaEventParams,\n//     })\n//   },\n//   (err) => {\n//     if (!err || !isAxiosError(err) || !err.response) return\n//     const { error: message, errorDetails } = err.response.data\n//     if (message !== 'api.something.blocked' || !errorDetails) {\n//       addErrorAlert(message)\n//       return\n//     }\n//   }\n// )\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,OAAO,SAASC,UAAT,CACLC,KADK,EAELC,YAFK,EAGL;EAAA;;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;EAEA,MAAMS,MAAM,GAAGR,mBAAmB,CAAC,kBAA0B;IAC3D,IAAII,SAAJ,EAAe;IACfC,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAACE,SAAD,CAAR;;IACA,IAAI;MAAA,kCAJuCC,IAIvC;QAJuCA,IAIvC;MAAA;;MACF,MAAMR,KAAK,CAACQ,IAAD,CAAX;IACD,CAFD,CAEE,OAAOC,GAAP,EAAY;MACZJ,QAAQ,CAACI,GAAD,CAAR;MACAR,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGQ,GAAH,CAAZ;IACD,CALD,SAKU;MACRN,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAZiC,CAAlC;EAcA,MAAMO,UAAU,GAAGd,WAAW,CAAC,MAAMS,QAAQ,CAACE,SAAD,CAAf,EAA4B,EAA5B,CAA9B;EAEA,OAAO,CAACL,SAAD,EAAYI,MAAZ,EAAoBF,KAApB,EAA2BM,UAA3B,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7CgBX,U;UAOCD,mB"},"metadata":{},"sourceType":"module"}