{"ast":null,"code":"var _jsxFileName = \"/Users/jijeong/study/foundation-ts/src/routes/Test/index.tsx\";\nimport { VictoryAxis, VictoryChart, VictoryLine, VictoryTheme } from 'victory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [[{\n  x: 1,\n  y: 1\n}, {\n  x: 2,\n  y: 2\n}, {\n  x: 3,\n  y: 3\n}, {\n  x: 4,\n  y: 4\n}], [{\n  x: 1,\n  y: 75\n}, {\n  x: 2,\n  y: 85\n}, {\n  x: 3,\n  y: 95\n}, {\n  x: 4,\n  y: 100\n}]]; // find maxima for normalizing data\n\nconst maxima = data.map(dataset => Math.max(...dataset.map(d => d.y)));\nconst xOffsets = [50, 950]; // 세로 줄\n\nconst tickPadding = [0, -20]; // 세로줄 눈금? 부분 숫자 패딩\n\nconst anchors = ['end', 'start'];\nconst colors = ['green', 'blue'];\n\nconst Test = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VictoryChart, {\n      theme: VictoryTheme.material,\n      width: 1000,\n      height: 400,\n      domain: {\n        y: [0, 1]\n      },\n      children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), data.map((d, i) => /*#__PURE__*/_jsxDEV(VictoryAxis, {\n        dependentAxis: true,\n        offsetX: xOffsets[i],\n        style: {\n          axis: {\n            stroke: colors[i]\n          },\n          ticks: {\n            padding: tickPadding[i]\n          },\n          tickLabels: {\n            fill: colors[i],\n            textAnchor: anchors[i]\n          }\n        } // Use normalized tickValues (0 - 1)\n        ,\n        tickValues: [0.25, 0.5, 0.75, 1] // Re-scale ticks by multiplying by correct maxima\n        ,\n        tickFormat: t => t * maxima[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)), data.map((d, i) => /*#__PURE__*/_jsxDEV(VictoryLine, {\n        data: d,\n        style: {\n          data: {\n            stroke: colors[i]\n          }\n        } // normalize data\n        ,\n        y: datum => {\n          console.log(datum);\n          return datum.y / maxima[i];\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["VictoryAxis","VictoryChart","VictoryLine","VictoryTheme","data","x","y","maxima","map","dataset","Math","max","d","xOffsets","tickPadding","anchors","colors","Test","material","i","axis","stroke","ticks","padding","tickLabels","fill","textAnchor","t","datum","console","log"],"sources":["/Users/jijeong/study/foundation-ts/src/routes/Test/index.tsx"],"sourcesContent":["import { VictoryAxis, VictoryChart, VictoryLine, VictoryTheme } from 'victory'\n\nconst data = [\n  [\n    { x: 1, y: 1 },\n    { x: 2, y: 2 },\n    { x: 3, y: 3 },\n    { x: 4, y: 4 },\n  ],\n  [\n    { x: 1, y: 75 },\n    { x: 2, y: 85 },\n    { x: 3, y: 95 },\n    { x: 4, y: 100 },\n  ],\n]\n// find maxima for normalizing data\nconst maxima = data.map((dataset) => Math.max(...dataset.map((d) => d.y)))\n\nconst xOffsets = [50, 950] // 세로 줄\nconst tickPadding = [0, -20] // 세로줄 눈금? 부분 숫자 패딩\nconst anchors = ['end', 'start']\nconst colors = ['green', 'blue']\n\nconst Test = () => {\n  return (\n    <div>\n      <VictoryChart theme={VictoryTheme.material} width={1000} height={400} domain={{ y: [0, 1] }}>\n        <VictoryAxis />\n        {data.map((d, i) => (\n          <VictoryAxis\n            dependentAxis\n            key={i}\n            offsetX={xOffsets[i]}\n            style={{\n              axis: { stroke: colors[i] },\n              ticks: { padding: tickPadding[i] },\n              tickLabels: { fill: colors[i], textAnchor: anchors[i] },\n            }}\n            // Use normalized tickValues (0 - 1)\n            tickValues={[0.25, 0.5, 0.75, 1]}\n            // Re-scale ticks by multiplying by correct maxima\n            tickFormat={(t) => t * maxima[i]}\n          />\n        ))}\n        {data.map((d, i) => (\n          <VictoryLine\n            key={i}\n            data={d}\n            style={{ data: { stroke: colors[i] } }}\n            // normalize data\n            y={(datum) => {\n              console.log(datum)\n              return datum.y / maxima[i]\n            }}\n          />\n        ))}\n      </VictoryChart>\n    </div>\n  )\n}\n\nexport default Test\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}